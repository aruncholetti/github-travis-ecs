AWSTemplateFormatVersion: 2010-09-09
Description: Build AWS Batch environment
 
#========VPC========#
Resources:
# Create VPC
  APVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 192.168.0.0/22
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Join [ "-", [ "ap" ,"vpc" ] ]
        
# Create Public RouteTable
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref APVPC
      Tags:
        - Key: Name
          Value: !Join [ "-", [ "ap" ,"public-route" ] ]

# Create Public Subnet A
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref APVPC
      CidrBlock: 192.168.0.0/24
      MapPublicIpOnLaunch: 'true'
      AvailabilityZone: "ap-northeast-1a"
      Tags:
        - Key: Name
          Value: !Join [ "-", [ "ap" ,"PublicSubnetA" ] ]
  PubSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref PublicRouteTable

# Create Public Subnet C
  PublicSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref APVPC
      CidrBlock: 192.168.1.0/24
      MapPublicIpOnLaunch: 'true'
      AvailabilityZone: "ap-northeast-1c"
      Tags:
        - Key: Name
          Value: !Join [ "-", [ "ap" ,"PublicSubnetC" ] ]
  PubSubnetCRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetC
      RouteTableId: !Ref PublicRouteTable

# Create InternetGateway
  APInternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: Name
          Value: !Join [ "-", [ "ap" ,"igw" ] ]
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref APVPC
      InternetGatewayId: !Ref APInternetGateway

# Route for InternetGateway or VPNGateway
  APRoute:
    Type: AWS::EC2::Route
    DependsOn: APInternetGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref APInternetGateway

# Security Groups for AP Batch Compute Environment
  APSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref APVPC
      GroupDescription: AP SecurityGroup
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: 22
        IpProtocol: tcp
        ToPort: 22

#=======IAM========#
# Create ecsInstanceRole
  APECSInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        ## start
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
        ## end
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
      Path: "/"
# Set InstanceProfile
  APECSInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Roles:
        - !Ref APECSInstanceRole
 
# Create AWSBatchServiceRole
  APBatchServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        ## start
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - batch.amazonaws.com
            Action:
            - sts:AssumeRole
        ## end
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole
      Path: "/"
###
### ---ComputeEnvironment---
###
  APComputeEnvironment:
    Type: "AWS::Batch::ComputeEnvironment"
    Properties:
      Type: MANAGED
      ServiceRole: !Ref APBatchServiceRole
      ComputeEnvironmentName: ap-cf-compute-environment
      ComputeResources:
        Ec2KeyPair: aws-ap
        MaxvCpus: 256
        MinvCpus: 2
        DesiredvCpus: 2
        SecurityGroupIds:
          - !Ref APSecurityGroup
        Type: EC2
        Subnets:
          - !Ref PublicSubnetA
          - !Ref PublicSubnetC
        #InstanceRole: !GetAtt APECSInstanceProfile.Arn
        InstanceRole: !Ref APECSInstanceProfile
        InstanceTypes:
          - c4.large
          - c4.xlarge
        Tags: {"Name": "AP Batch Compute Environment"}
      State: ENABLED